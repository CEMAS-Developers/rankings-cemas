{"version":3,"sources":["components/ItemBoletin.js","components/ListaBoletines.js","hooks/useFetch.js","api/getReportsURL.js","components/SearchBar.js","hooks/useForm.js","App.js","reportWebVitals.js","index.js"],"names":["ItemBoletin","data","useState","active","className","nombre_estudiante","numero_estudiante","asignaturas","map","asignatura","codigo_asignatura","modulos","modulo","nombre_titular","ListaBoletines","url","console","log","isMounted","useRef","loading","error","state","setState","useEffect","current","fetch","then","resp","json","catch","useFetch","filter","dato","length","_id","getReportsURL","curso","periodo","string_params","encodeURI","SearchBar","handleUrl","initialState","values","setValues","target","name","value","useForm","formValues","handleInputChange","reset","onSubmit","e","preventDefault","info","type","placeholder","onChange","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"8KAEe,SAASA,EAAT,GAAgC,IAATC,EAAQ,EAARA,KAAQ,EAEdC,mBAAS,IAFK,mBAEnCC,EAFmC,UAI1C,OACI,8BACI,qBAAIC,UAAS,iDAA4CD,GAAzD,UACI,sBAAKC,UAAU,uCAAf,UACI,oBAAIA,UAAU,OAAd,SAAsBH,EAAKI,oBAC3B,gCAAQJ,EAAKK,uBAEjB,oBAAGF,UAAU,OAAb,2BAAmCH,EAAKM,YAAYC,KAAI,SAAAC,GAAU,OAAI,kCAAQA,EAAWC,kBAAnB,aAEtE,oBAAGN,UAAU,OAAb,uBAA+BH,EAAKU,QAAQH,KAAI,SAAAI,GAAM,OAAI,kCAAQA,EAAOF,kBAAf,aAI1D,mBAAGN,UAAU,OAAb,6CACA,mBAAGA,UAAU,OAAb,2CACA,mBAAGA,UAAU,OAAb,2CAEA,8CAAiBH,EAAKY,kBACtB,qBAAKT,UAAU,OAAf,SACI,wBAAQA,UAAU,2BAAlB,2BCrBL,SAASU,EAAT,GAAkC,IAARC,EAAO,EAAPA,IAErCC,QAAQC,IAAI,wBAAyBF,GAFO,MCAxB,SAACA,GAErB,IAAMG,EAAYC,kBAAO,GAFI,EAGHjB,mBAAS,CAAED,KAAM,KAAMmB,SAAS,EAAMC,MAAO,OAH1C,mBAGtBC,EAHsB,KAGfC,EAHe,KAuC7B,OAlCAC,qBAAU,WACN,OAAO,WACHN,EAAUO,SAAU,KAEzB,IAGHD,qBAAU,WAEND,EAAS,CAAEtB,KAAM,KAAMmB,SAAS,EAAMC,MAAO,OAE7CK,MAAMX,GACDY,MAAK,SAAAC,GAAI,OAAIA,EAAKC,UAClBF,MAAK,SAAA1B,GAEEiB,EAAUO,SACVF,EAAS,CACLH,SAAS,EACTC,MAAO,KACPpB,YAKX6B,OAAM,WACHP,EAAS,CACLtB,KAAM,KACNmB,SAAS,EACTC,MAAO,mCAIpB,CAACN,IAEGO,EDlC0BS,CAAShB,GAAlCd,EALoC,EAKpCA,KAAMmB,EAL8B,EAK9BA,QAASC,EALqB,EAKrBA,MAEvB,OAAID,GAAWL,EAEJ,yCACAM,GACPL,QAAQC,IAAII,GACL,6BAAKA,MAGhBL,QAAQC,IAAI,UAAWhB,GAInB,8BACI,qBAAKG,UAAU,aAAf,SACKH,EAAKA,KAAK+B,QAAO,SAAAC,GAAI,OAAKA,EAAK1B,YAAY2B,OAAS,KAAI1B,KAAI,SAAAyB,GAAI,OAAI,cAACjC,EAAD,CAA4BC,KAAMgC,GAAhBA,EAAKE,aEzB5G,IAoBeC,EApBO,SAACC,EAAOC,GAW7B,IACIC,EAAa,mBAAeF,EAAf,YAAwBC,EAAxB,KAKjB,MADiB,UAHD,kCAGC,OALR,aAKQ,OAAsBE,UAAUD,K,cCZnC,SAASE,EAAT,GAAmC,IAAdC,EAAa,EAAbA,UAAa,ECD1B,WAAwB,IAAvBC,EAAsB,uDAAP,GAAO,EAGdzC,mBAASyC,GAHK,mBAGnCC,EAHmC,KAG3BC,EAH2B,KAmB1C,MAAO,CAACD,EATkB,SAAC,GAAgB,IAAdE,EAAa,EAAbA,OAEzBD,EAAU,2BACHD,GADE,kBAEJE,EAAOC,KAAOD,EAAOE,UAThB,WACVH,EAAUF,KDGiCM,CAN3B,CAChBZ,MAAO,GACPC,QAAS,KAJgC,mBAQtCY,EARsC,KAQ1BC,EAR0B,KAQPC,EARO,KAUrCf,EAAmBa,EAAnBb,MAAOC,EAAYY,EAAZZ,QAef,OACI,8BACI,sBAAMe,SAdM,SAACC,GACjBA,EAAEC,iBACFvC,QAAQwC,KAAK,gBAAiBnB,EAAOC,GAErC,IAAMvB,EAAMqB,EAAcC,EAAOC,GACjCtB,QAAQwC,KAAK,QAASzC,GAEtB2B,EAAU3B,GACVqC,KAMI,SACI,sBAAKhD,UAAU,gBAAf,UACI,qBAAKA,UAAU,QAAf,SACI,uBACIqD,KAAK,OACLrD,UAAU,eACVsD,YAAY,QACZX,KAAK,QACLC,MAAOX,EACPsB,SAAUR,MAGlB,qBAAK/C,UAAU,QAAf,SACI,uBACIqD,KAAK,OACLrD,UAAU,eACVsD,YAAY,UACZX,KAAK,UACLC,MAAOV,EACPqB,SAAUR,MAGlB,qBAAK/C,UAAU,QAAf,SACI,wBAAQA,UAAU,2BAA2BqD,KAAK,SAAlD,6BEVTG,MAtCf,WAAgB,IAAD,EAEa1D,mBAAS,MAFtB,mBAENoB,EAFM,KAECC,EAFD,KASb,OALAP,QAAQC,IAAIK,GAMV,sBAAKlB,UAAU,YAAf,UACE,qBAAKA,UAAU,WAAf,SAEE,sBAAKA,UAAU,MAAf,UACE,4CACA,4BAKJ,qBAAKA,UAAU,WAAf,SACE,qBAAKA,UAAU,MAAf,SACE,cAACqC,EAAD,CAAWC,UAjBD,SAAC3B,GACjBQ,EAASR,UAoBP,qBAAKX,UAAU,WAAf,SACE,sBAAKA,UAAU,0BAAf,UACE,qDACA,uBACCkB,GAAS,cAACR,EAAD,CAAgBC,IAAKO,aCxB1BuC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBpC,MAAK,YAAkD,IAA/CqC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.4f31906e.chunk.js","sourcesContent":["import React, { useState } from 'react'\n\nexport default function ItemBoletin({ data }) {\n\n    const [active, setactive] = useState('')\n\n    return (\n        <div>\n            <li className={`list-group-item list-group-item-action ${active}`}>\n                <div className=\"d-flex w-100 justify-content-between\">\n                    <h5 className=\"mb-1\">{data.nombre_estudiante}</h5>\n                    <small>{data.numero_estudiante}</small>\n                </div>\n                <p className=\"mb-1\"> Asignaturas: {data.asignaturas.map(asignatura => <small>{asignatura.codigo_asignatura} </small>)}</p>\n\n                <p className=\"mb-1\"> Modulos: {data.modulos.map(modulo => <small>{modulo.codigo_asignatura} </small>)}</p>\n\n\n\n                <p className=\"mb-1\"> Promedio Academico : 92.56345 </p>\n                <p className=\"mb-1\"> Promedio Tecnico : 92.56345 </p>\n                <p className=\"mb-1\"> Promedio General : 92.56345 </p>\n\n                <small>Titular: {data.nombre_titular}</small>\n                <div className=\"mt-3\">\n                    <button className=\"btn btn-outline-success \" >Buscar</button>\n\n                </div>\n            </li>\n        </div>\n    )\n}\n","import { useFetch } from \"../hooks/useFetch\";\nimport ItemBoletin from \"./ItemBoletin\";\n\n\nexport default function ListaBoletines({ url }) {\n\n    console.log(\"Lista Boletines URL: \", url);\n    //{ data: null, loading: true, error: null }\n\n    const { data, loading, error } = useFetch(url);\n\n    if (loading && url) {\n\n        return <h1>Loading</h1>\n    } else if (error) {\n        console.log(error);\n        return <h3>{error}</h3>\n    }\n\n    console.log(\"Datos: \", data)\n\n\n    return (\n        <div>\n            <div className=\"list-group\">\n                {data.data.filter(dato => (dato.asignaturas.length > 2)).map(dato => <ItemBoletin key={dato._id} data={dato} />)}\n\n            </div>\n        </div>\n    )\n}\n","\nimport { useState, useEffect, useRef } from 'react';\n\n\nexport const useFetch = (url) => {\n\n    const isMounted = useRef(true);\n    const [state, setState] = useState({ data: null, loading: true, error: null });\n\n    useEffect(() => {\n        return () => {\n            isMounted.current = false;\n        }\n    }, [])\n\n\n    useEffect(() => {\n\n        setState({ data: null, loading: true, error: null });\n\n        fetch(url)\n            .then(resp => resp.json())\n            .then(data => {\n\n                if (isMounted.current) {\n                    setState({\n                        loading: false,\n                        error: null,\n                        data\n                    });\n                }\n\n            })\n            .catch(() => {\n                setState({\n                    data: null,\n                    loading: false,\n                    error: 'No se pudo cargar la info'\n                })\n            })\n\n    }, [url])\n\n    return state;\n}\n\n\n\n/**\n * # useFetch\n\nEjemplo:\n```\n    const url = 'endpoint de una api';\n    const { data: null, loading: true, error: null } = useFetch(url);\n\n```\n */","const getReportsURL = (curso, periodo) => {\n\n\t/**\n\t * @description: Obtener todos los reportes por curso y periodo. \n\t * @param\t{String}\tcurso Ejemplo: \"4A\"\n\t * @param\t{String}\tPeriodo Ejemplo: \"2020-2021\"\n\t * @URL https://cemasapi.herokuapp.com/reportes/boletin/4A:2020-2021:\n\t * @return  {String}\tURL\t String URL .\n\t */\n\n\n\tconst url = `/reportes`;\n\tlet string_params = `/boletin/${curso}:${periodo}:`;\n\tconst URL_API = 'https://cemasapi.herokuapp.com';\n\n\n\tconst urlComplete = `${URL_API}${url}${encodeURI(string_params)}`;\n\treturn urlComplete;\n};\n\nexport default getReportsURL;","import React from 'react'\nimport getReportsURL from '../api/getReportsURL';\nimport { useForm } from '../hooks/useForm'\n\nexport default function SearchBar({ handleUrl }) {\n\n    const initialForm = {\n        curso: '',\n        periodo: ''\n    };\n\n\n    const [formValues, handleInputChange, reset] = useForm(initialForm);\n\n    const { curso, periodo } = formValues;\n\n\n    const loadRecords = (e) => {\n        e.preventDefault();\n        console.info(\"Form Values: \", curso, periodo);\n\n        const url = getReportsURL(curso, periodo);\n        console.info(\"URL: \", url);\n\n        handleUrl(url);\n        reset();\n\n    }\n\n    return (\n        <div>\n            <form onSubmit={loadRecords}>\n                <div className=\"form-row ml-5\">\n                    <div className=\"col-5\">\n                        <input\n                            type=\"text\"\n                            className=\"form-control\"\n                            placeholder=\"Curso\"\n                            name=\"curso\"\n                            value={curso}\n                            onChange={handleInputChange}\n                        />\n                    </div>\n                    <div className=\"col-5\">\n                        <input\n                            type=\"text\"\n                            className=\"form-control\"\n                            placeholder=\"Periodo\"\n                            name=\"periodo\"\n                            value={periodo}\n                            onChange={handleInputChange}\n                        />\n                    </div>\n                    <div className=\"col-2\">\n                        <button className=\"btn btn-outline-success \" type=\"submit\">Buscar</button>\n                    </div>\n                </div>\n            </form>\n        </div>\n    )\n}\n","import { useState } from \"react\"\n\n\nexport const useForm = (initialState = {}) => {\n   \n\n    const [values, setValues] = useState(initialState);\n\n    const reset = () => {\n        setValues(initialState);\n    }\n\n\n    const handleInputChange = ({ target }) => {\n\n        setValues({\n            ...values,\n            [target.name]: target.value\n        });\n\n    }\n\n    return [values, handleInputChange, reset];\n\n}\n\n\n /*\n        # useForm\n\n        Ejemplo:\n\n            const initialForm = {\n                name: '',\n                age: 0,\n                email: ''\n            };\n            \n        const [ formValues, handleInputChange, reset ] = useForm( initialForm );\n    */","\n\nimport { useState } from 'react';\nimport ListaBoletines from './components/ListaBoletines';\nimport SearchBar from './components/SearchBar';\n\nfunction App() {\n\n  const [state, setState] = useState(null)\n\n  console.log(state)\n  const handleUrl = (url) => {\n    setState(url)\n  }\n\n  return (\n    <div className=\"container\">\n      <div className=\"row mt-4\">\n\n        <div className=\"col\">\n          <h1>Boletines:</h1>\n          <hr />\n        </div>\n\n      </div>\n\n      <div className=\"row mt-4\">\n        <div className=\"col\">\n          <SearchBar handleUrl={handleUrl} />\n        </div>\n      </div>\n\n      <div className=\"row mt-4\">\n        <div className=\"col mt-4 ml-5 mr-5 mb-5\">\n          <h3>Lista de boletines:</h3>\n          <hr />\n          {state && <ListaBoletines url={state} />}\n        </div>\n      </div>\n\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}